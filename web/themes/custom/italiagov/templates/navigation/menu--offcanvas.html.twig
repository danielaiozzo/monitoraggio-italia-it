{#
/**
 * @file
 * Theme override to display a menu in the offcanvas region.
 *
 * Available variables:
 * - menu_name: The machine name of the menu.
 * - items: A nested list of menu items. Each menu item contains:
 *   - attributes: HTML attributes for the menu item.
 *   - below: The menu item child items.
 *   - title: The menu link title.
 *   - url: The menu link url, instance of \Drupal\Core\Url
 *   - localized_options: Menu link localized options.
 *   - is_expanded: TRUE if the link has visible children within the current
 *     menu tree.
 *   - is_collapsed: TRUE if the link has children within the current menu tree
 *     that are not currently visible.
 *   - in_active_trail: TRUE if the link is in the active trail.
 */
#}

{% import _self as menus %}

{#
  We call a macro which calls itself to render the full tree.
  @see http://twig.sensiolabs.org/doc/tags/macro.html
#}
{{ menus.menu_links(items, attributes, 0) }}

{% macro menu_links(items, attributes, menu_level) %}
  {% import _self as menus %}
  {%
    set root_classes = [
      'Linklist',
      'Linklist--padded',
      'Treeview',
      'Treeview--default',
      'js-Treeview',
      'u-text-r-xs',
    ]
  %}
  {% if items %}
    {% if menu_level == 0 %}
    <ul{{ attributes.addClass(root_classes) }}>
    {% else %}
    <ul>
    {% endif %}
    {% for item in items %}
      <li{{ item.attributes }}>
        {% set link_class = item.url.getOption('attributes').class %}
        {% set data_megamenu_class = link_class ? " data-megamenu-class=" ~ link_class : '' %}
        {# If the url isn't empty we print the link with relative attributes #}
        {% if item.url.toString != "" %}
          {{ link(item.title, item.url, {'data-megamenu-class': link_class}) }}
        {#
          If we have an empty url (route:<none>) we print a custom link with the
          relative attributes. This is useful when building a megamenu.
        #}
        {% else %}
          {#
            This code will also support the link_attribute module.
            Note that the megamenu is builded from the offcanvas treeview menu
            (the current one).
            All menu link classes are removed and if we want a class to be added
            to the megamenu link we must use the data-megamenu-class attribute.
          #}
          {% set link_attributes = [] %}
          {% for attribute, value in item.url.getOption('attributes') %}
            {% set link_attributes = value ? link_attributes|merge([attribute ~ "=" ~ value]) : link_attributes %}
          {% endfor %}
          <a {{ link_attributes|join(' ') }} href="#" onclick="return false;" role="button" title="{{ item.title }}"{{ data_megamenu_class }}>
            {{ item.title }}
          </a>
        {% endif %}
        {% if item.below %}
          {{ menus.menu_links(item.below, attributes, menu_level + 1) }}
        {% endif %}
      </li>
    {% endfor %}
    </ul>
  {% endif %}
{% endmacro %}
